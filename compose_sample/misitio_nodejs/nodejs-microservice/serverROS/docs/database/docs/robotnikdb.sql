-- MySQL Script generated by MySQL Workbench
-- Fri Feb  7 11:52:33 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema robotnikdb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `robotnikdb` ;

-- -----------------------------------------------------
-- Schema robotnikdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `robotnikdb` DEFAULT CHARACTER SET utf8 ;
USE `robotnikdb` ;

-- -----------------------------------------------------
-- Table `robotnikdb`.`robot_model`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `robotnikdb`.`robot_model` ;

CREATE TABLE IF NOT EXISTS `robotnikdb`.`robot_model` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `foto` VARCHAR(200) NULL,
  `description` VARCHAR(45) NULL,
  `supplier` VARCHAR(45) NULL,
  `username` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `robotnikdb`.`robots_unit`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `robotnikdb`.`robots_unit` ;

CREATE TABLE IF NOT EXISTS `robotnikdb`.`robots_unit` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  `comment` VARCHAR(255) NULL,
  `robot_model_id` INT NOT NULL,
  `ip` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_robots_unit_robot_model1_idx` (`robot_model_id` ASC),
  CONSTRAINT `fk_robots_unit_robot_model1`
    FOREIGN KEY (`robot_model_id`)
    REFERENCES `robotnikdb`.`robot_model` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `robotnikdb`.`test`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `robotnikdb`.`test` ;

CREATE TABLE IF NOT EXISTS `robotnikdb`.`test` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `description` VARCHAR(255) NOT NULL,
  `type` VARCHAR(45) NULL,
  `comment` VARCHAR(255) NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `robotnikdb`.`type_message`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `robotnikdb`.`type_message` ;

CREATE TABLE IF NOT EXISTS `robotnikdb`.`type_message` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `robotnikdb`.`topic`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `robotnikdb`.`topic` ;

CREATE TABLE IF NOT EXISTS `robotnikdb`.`topic` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_model` VARCHAR(255) NOT NULL DEFAULT 0,
  `name` VARCHAR(45) NULL,
  `type_message` VARCHAR(45) NULL,
  `rename` VARCHAR(45) NULL,
  `pus_sub` VARCHAR(45) NULL,
  `type_message_id` INT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_topic_type_message1_idx` (`type_message_id` ASC),
  CONSTRAINT `fk_topic_type_message1`
    FOREIGN KEY (`type_message_id`)
    REFERENCES `robotnikdb`.`type_message` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `robotnikdb`.`qa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `robotnikdb`.`qa` ;

CREATE TABLE IF NOT EXISTS `robotnikdb`.`qa` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `succes` VARCHAR(45) NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `robotnikdb`.`operario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `robotnikdb`.`operario` ;

CREATE TABLE IF NOT EXISTS `robotnikdb`.`operario` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `robotnikdb`.`tests_ready`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `robotnikdb`.`tests_ready` ;

CREATE TABLE IF NOT EXISTS `robotnikdb`.`tests_ready` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `init_date` DATETIME NULL,
  `end_date` DATETIME NULL,
  `finished` INT NULL,
  `id_operario` INT NULL,
  `test_id` INT NOT NULL,
  `qa_id` INT NOT NULL,
  `result` INT NULL,
  `related_components` VARCHAR(105) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_tests_ready_operario1_idx` (`id_operario` ASC),
  INDEX `fk_tests_ready_test1_idx` (`test_id` ASC),
  INDEX `fk_tests_ready_qa1_idx` (`qa_id` ASC),
  CONSTRAINT `fk_tests_ready_operario1`
    FOREIGN KEY (`id_operario`)
    REFERENCES `robotnikdb`.`operario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tests_ready_test1`
    FOREIGN KEY (`test_id`)
    REFERENCES `robotnikdb`.`test` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tests_ready_qa1`
    FOREIGN KEY (`qa_id`)
    REFERENCES `robotnikdb`.`qa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `robotnikdb`.`robot_model_test`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `robotnikdb`.`robot_model_test` ;

CREATE TABLE IF NOT EXISTS `robotnikdb`.`robot_model_test` (
  `robot_model_id` INT NOT NULL,
  `tests_id` INT NOT NULL,
  PRIMARY KEY (`robot_model_id`, `tests_id`),
  INDEX `fk_robot_model_has_tests_tests1_idx` (`tests_id` ASC),
  INDEX `fk_robot_model_has_tests_robot_model1_idx` (`robot_model_id` ASC),
  CONSTRAINT `fk_robot_model_has_tests_robot_model1`
    FOREIGN KEY (`robot_model_id`)
    REFERENCES `robotnikdb`.`robot_model` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_robot_model_has_tests_tests1`
    FOREIGN KEY (`tests_id`)
    REFERENCES `robotnikdb`.`test` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `robotnikdb`.`topic_test`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `robotnikdb`.`topic_test` ;

CREATE TABLE IF NOT EXISTS `robotnikdb`.`topic_test` (
  `topic_id` INT NOT NULL,
  `test_id` INT NOT NULL,
  PRIMARY KEY (`topic_id`, `test_id`),
  INDEX `fk_topic_has_test_test1_idx` (`test_id` ASC),
  INDEX `fk_topic_has_test_topic1_idx` (`topic_id` ASC),
  CONSTRAINT `fk_topic_has_test_topic1`
    FOREIGN KEY (`topic_id`)
    REFERENCES `robotnikdb`.`topic` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_topic_has_test_test1`
    FOREIGN KEY (`test_id`)
    REFERENCES `robotnikdb`.`test` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `robotnikdb`.`log_optitrack`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `robotnikdb`.`log_optitrack` ;

CREATE TABLE IF NOT EXISTS `robotnikdb`.`log_optitrack` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date` DATETIME NOT NULL,
  `x` DOUBLE NULL,
  `y` DOUBLE NULL,
  `Z` DOUBLE NULL,
  `bodyname` VARCHAR(65) NULL,
  `description` VARCHAR(255) NULL,
  `note` VARCHAR(255) NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `robotnikdb`.`result_types`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `robotnikdb`.`result_types` ;

CREATE TABLE IF NOT EXISTS `robotnikdb`.`result_types` (
  `value` INT NULL,
  `type` VARCHAR(45) NULL);


-- -----------------------------------------------------
-- Table `robotnikdb`.`commands`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `robotnikdb`.`commands` ;

CREATE TABLE IF NOT EXISTS `robotnikdb`.`commands` (
  `id` INT NOT NULL,
  `order` VARCHAR(255) NULL,
  `name` VARCHAR(45) NULL,
  `test_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_commands_test1_idx` (`test_id` ASC),
  CONSTRAINT `fk_commands_test1`
    FOREIGN KEY (`test_id`)
    REFERENCES `robotnikdb`.`test` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `robotnikdb`.`robot_model`
-- -----------------------------------------------------
START TRANSACTION;
USE `robotnikdb`;
INSERT INTO `robotnikdb`.`robot_model` (`id`, `name`, `foto`, `description`, `supplier`, `username`, `password`) VALUES (1, 'modelo_tortuga', NULL, 'modelo basado en turtlesim', 'Ros-tools', NULL, NULL);
INSERT INTO `robotnikdb`.`robot_model` (`id`, `name`, `foto`, `description`, `supplier`, `username`, `password`) VALUES (2, 'summit', NULL, 'robot todoterreno', 'Robotnik', 'summit', 'R0b0tn1K');

COMMIT;


-- -----------------------------------------------------
-- Data for table `robotnikdb`.`robots_unit`
-- -----------------------------------------------------
START TRANSACTION;
USE `robotnikdb`;
INSERT INTO `robotnikdb`.`robots_unit` (`id`, `name`, `description`, `comment`, `robot_model_id`, `ip`) VALUES (1, 'robot_todoterreno_1', 'todoterreno de 4 ruedas', NULL, 2, '192.168.1.137');

COMMIT;


-- -----------------------------------------------------
-- Data for table `robotnikdb`.`test`
-- -----------------------------------------------------
START TRANSACTION;
USE `robotnikdb`;
INSERT INTO `robotnikdb`.`test` (`id`, `name`, `description`, `type`, `comment`) VALUES (1, 'mi_primer_test', 'Test para mover linealmente', 'testing', 'test de pruebas');
INSERT INTO `robotnikdb`.`test` (`id`, `name`, `description`, `type`, `comment`) VALUES (2, 'mi_segundo_test', 'Test para mover circularmente', 'testing', 'test de pruebas 2');
INSERT INTO `robotnikdb`.`test` (`id`, `name`, `description`, `type`, `comment`) VALUES (3, 'test_version', 'Serie de comandos sobre tobot', 'comandos', 'Debe mostrar salida exitosa');

COMMIT;


-- -----------------------------------------------------
-- Data for table `robotnikdb`.`type_message`
-- -----------------------------------------------------
START TRANSACTION;
USE `robotnikdb`;
INSERT INTO `robotnikdb`.`type_message` (`id`, `name`, `description`) VALUES (1, 'Pose', 'x:y:z');

COMMIT;


-- -----------------------------------------------------
-- Data for table `robotnikdb`.`topic`
-- -----------------------------------------------------
START TRANSACTION;
USE `robotnikdb`;
INSERT INTO `robotnikdb`.`topic` (`id`, `id_model`, `name`, `type_message`, `rename`, `pus_sub`, `type_message_id`) VALUES (1, '0', '/turtle1/pose', 'turtlesim/Pose', 'Posicion Turtle 1', '1', 1);
INSERT INTO `robotnikdb`.`topic` (`id`, `id_model`, `name`, `type_message`, `rename`, `pus_sub`, `type_message_id`) VALUES (2, '0', '/turtle2/pose', 'turtlesim/Pose', 'Posicion Turtle 2', '1', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `robotnikdb`.`operario`
-- -----------------------------------------------------
START TRANSACTION;
USE `robotnikdb`;
INSERT INTO `robotnikdb`.`operario` (`id`, `name`) VALUES (1, 'Eduard');
INSERT INTO `robotnikdb`.`operario` (`id`, `name`) VALUES (2, 'Manuel');
INSERT INTO `robotnikdb`.`operario` (`id`, `name`) VALUES (3, 'Paco');

COMMIT;


-- -----------------------------------------------------
-- Data for table `robotnikdb`.`robot_model_test`
-- -----------------------------------------------------
START TRANSACTION;
USE `robotnikdb`;
INSERT INTO `robotnikdb`.`robot_model_test` (`robot_model_id`, `tests_id`) VALUES (2, 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `robotnikdb`.`topic_test`
-- -----------------------------------------------------
START TRANSACTION;
USE `robotnikdb`;
INSERT INTO `robotnikdb`.`topic_test` (`topic_id`, `test_id`) VALUES (1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `robotnikdb`.`result_types`
-- -----------------------------------------------------
START TRANSACTION;
USE `robotnikdb`;
INSERT INTO `robotnikdb`.`result_types` (`value`, `type`) VALUES (0, 'BOOL');
INSERT INTO `robotnikdb`.`result_types` (`value`, `type`) VALUES (1, 'STRING');
INSERT INTO `robotnikdb`.`result_types` (`value`, `type`) VALUES (3, 'DOUBLE');

COMMIT;


-- -----------------------------------------------------
-- Data for table `robotnikdb`.`commands`
-- -----------------------------------------------------
START TRANSACTION;
USE `robotnikdb`;
INSERT INTO `robotnikdb`.`commands` (`id`, `order`, `name`, `test_id`) VALUES (1, '1', 'lsb_release -a', 3);
INSERT INTO `robotnikdb`.`commands` (`id`, `order`, `name`, `test_id`) VALUES (2, '2', 'uname -a', 3);
INSERT INTO `robotnikdb`.`commands` (`id`, `order`, `name`, `test_id`) VALUES (3, '3', 'rosversion -d', 3);

COMMIT;

